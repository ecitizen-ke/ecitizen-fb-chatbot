name: Test and Build

on:
  workflow_dispatch: {}
  pull_request:
    branches:
      - develop

env:
  MYSQL_USER: admin
  MYSQL_PASSWORD: admin123
  MYSQL_DB: testDB
  CONFIG_MODE: testing
  DEVELOPMENT_DATABASE_URL: mysql+pymysql://admin:admin123@localhost/ecitizen-fb-chatbot-db
  TEST_DATABASE_URL: mysql+pymysql://admin:admin123@localhost/testDB
  SQLALCHEMY_TRACK_MODIFICATIONS: False
  PYTHON_VERSION: '3.12.3'
  SECRET_KEY: my-testing-sweet-secret-do-not-tell
  JWT_SECRET_KEY: my-testing-sweet-jwt-secret-do-not-tell
  JWT_BLACKLIST_ENABLED: True
  JWT_BLACKLIST_TOKEN_CHECKS: "['access', 'refresh']"
  HUGGING_FACE_API_KEY: your-huggingface-issued-api-key
  HUGGING_FACE_API_URL: your-huggingface_model_url
  RESOURCE_PATH: /home/runner/work/ecitizen-fb-chatbot/ecitizen-fb-chatbot/backend/app/api/ai/faqs.txt

jobs:
  build:
    runs-on: ubuntu-22.04

    services:
      mysql:
        image: mysql:8.0.36
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: ${{ env.MYSQL_DB }}
          MYSQL_USER: ${{ env.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ env.MYSQL_PASSWORD }}
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping --silent" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Start mysql server
        run: |
          sudo /etc/init.d/mysql start
          mysql -h localhost --port 33306 -u root -proot -e 'CREATE USER "admin"@"localhost" IDENTIFIED BY "admin123";' 
          mysql -h localhost --port 33306 -u root -proot -e 'GRANT ALL PRIVILEGES ON *.* TO "admin"@"localhost" WITH GRANT OPTION;'
          mysql -h localhost --port 33306 -u root -proot -e 'FLUSH PRIVILEGES;'

          mysql -h localhost --port 33306 -u admin -padmin123 -e 'CREATE DATABASE IF NOT EXISTS testDB;'

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          cd backend
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: |
          coverage run -m pytest

      - name: Build Docker image
        run: |
          cd backend
          docker build --tag ecitizen-fb-chatbot-api:latest .
